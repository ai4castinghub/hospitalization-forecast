name: Hub Submission Validation (R)

on:
  workflow_dispatch:
  pull_request:
    branches: main
    paths:
      - 'model-output/**'
      - 'model-metadata/*'
      - '!**README**'

jobs:
  validate_and_check:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch the entire Git history to ensure all commits are available

      # Set up R environment
      - uses: r-lib/actions/setup-r@v2
        with:
          install-r: false
          use-public-rspm: true
          extra-repositories: 'https://hubverse-org.r-universe.dev'

      - name: Update R
        run: |
          sudo apt-get update

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::hubValidations
            any::sessioninfo

      # Check for changes outside allowed directories
      - name: Get base and head commits
        id: commits
        run: |
          echo "BASE_COMMIT=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV
          echo "HEAD_COMMIT=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

      - name: Run git diff to find changed files
        run: |
          git diff --name-only ${{ env.BASE_COMMIT }} ${{ env.HEAD_COMMIT }} > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt

      - name: Check if changes are outside allowed directories and add label
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          # Check if there are changes in the model-output directory
          if grep -q '^model-output/' changed_files.txt; then
            echo "Adding 'data submission' label as changes were made in model-output."
            gh pr edit $PR_NUMBER --add-label "data submission"
            gh pr comment $PR_NUMBER --body "Detected changes in model-output directory. Label 'data submission' has been added."
          fi

      # Run R-based validations
      - name: Run validations
        id: validation
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          library("hubValidations")
          v <- hubValidations::validate_pr(
              gh_repo = Sys.getenv("GITHUB_REPOSITORY"),
              pr_number = Sys.getenv("PR_NUMBER"),
              skip_submit_window_check = FALSE
          )
          hubValidations::check_for_errors(v, verbose = TRUE)
        shell: Rscript {0}
        continue-on-error: true  # Continue even if there are validation errors to handle comments/labels

      # Handle results: add label and comment based on validation success
      - name: Handle validation results
        if: ${{ always() }}
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          if [[ ${{ steps.validation.outcome }} == "success" ]]; then
            # Add "passed-validation" label and success comment if validation succeeded
            gh pr edit $PR_NUMBER --add-label "passed-validation"
            gh pr comment $PR_NUMBER --body "✅ Validation successful! Label 'passed-validation' has been added."
          else
            # Comment with errors if validation failed
            gh pr comment $PR_NUMBER --body "❌ Validation failed. Please address the issues above and re-submit."
          fi
